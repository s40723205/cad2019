<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Week</h1>
<h2>WEEK2</h2>
<h2>WEEK3</h2>
<h2>WEEK4</h2>
<h4 class="post-title entry-title" itemprop="name">建立個人cad2019倉儲</h4>
<h4>Solvespace 編譯</h4>
<div><span></span></div>
<div><span>1.將Y:\portablegit\bin\sh.exe的sh.exe改成 &gt; sh_rename_for_solvespace.exe。</span></div>
<div><span><span>2.到tmp下git clone --recurse-submodules https://github.com/solvespace/solvespace.git 。</span></span></div>
<div><span><span>3.進入tmp下的solvespace\extlib\angle\CMakeLists.txt。</span></span></div>
<div><span><span>4.將CMakeLists.txt中的第713 and 714行前面加上#。</span></span></div>
<div><span><span>5.</span>cd solvespace/extlib/libpng &gt; <span>mkdir build &gt; cd build。</span></span></div>
<div><span><span>6.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release &gt; mingw32-make。</span></span></div>
<div><span><span>7.</span>把libpng.dll.a 改名為 libpng_static.a 並放到Y:/msys64\mingw64\lib。</span></div>
<div><span>8.在solvespace建立build資料夾，在cd build。</span></div>
<div><span>9.cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release &gt; mingw32-make。</span></div>
<div><span>10.到bin內開啟solvespace程式，把需要的檔案從Y:/msys64\mingw64\bin拿。</span></div>
<div>
<h4 class="post-title entry-title" itemprop="name">解決cmake .. -G的Erro</h4>
<div id="tipue_search_content">Develop &lt;&lt;<span> </span><a href="https://s40723210.github.io/cad2019/content/Develop.html">Previous</a></div>
<div class="container">
<div class="row pt-3 mx-auto">
<p>Copyright ©2019 All rights reserved | This template is made with<span> </span><i aria-hidden="true" class="icon-heart"></i><span> </span>by<span> </span><a href="https://colorlib.com/" target="_blank">Colorlib</a></p>
</div>
</div>
</div>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Solvespace 編譯</h1>
<h4>分組作業:</h4>
<p>請各組組員分別完成 Solvespace 編譯流程後, 建立一個帶有字幕說明的導引影片, 上傳至 Youtube 並內嵌至各分組網站中.</p>
<h4>下載可攜程式系統:</h4>
<p><a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a></p>
<h4>參考資料:</h4>
<p><a href="https://2019wcm.blogspot.com/2019/03/msys2-solvespace.html">https://2019wcm.blogspot.com/2019/03/msys2-solvespace.html</a></p>
<p><a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a></p>
<h4>編譯步驟:</h4>
<p>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe (透過 MSYS2 執行 shell 指令, 而非 portablegit 中的 sh.exe)</p>
<p>git version 查驗 git 版本</p>
<p>git 2.13 版本以上, 可以使用下列 git clone<span> </span><span>--recurse-submodules 取得所有子模組資料</span></p>
<p>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</p>
<p>上述指令同:</p>
<p>git clone <span><a href="https://github.com/solvespace/solvespace.git">https://github.com/solvespace/solvespace.git</a> </span></p>
<p><span>cd solvespace</span></p>
<p><span>git submodule init</span></p>
<p><span>git submodule update</span></p>
<p>edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714</p>
<p>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()</p>
<p>接著需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中 (即隨身系統的 msys64\mingw64\lib 目錄):</p>
<p>cd solvespace</p>
<p>cd extlib</p>
<p>cd libpng</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>mingw32-make</p>
<p>(mingw32-make -Wl,-static)</p>
<p>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib</p>
<p>接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行:</p>
<p><span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span><br/><span>mingw32-make</span></p>